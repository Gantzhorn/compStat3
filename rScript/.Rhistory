library(CSwR)
library(microbenchmark)
library(Rcpp)
library(profvis)
library(numDeriv)
#---------------------------------Simulation-----------------------------------#
#Set parameters
mu <- 2
sigma_sq <- 4
nu <- 5
initpar <- c(1, 5)
#Simulate using hint
N <- 10000 #number of simulations
W <- rchisq(N, df = nu)
X <- rnorm(N, mean = mu, sd = sqrt(nu*sigma_sq/W))
ggplot2::ggplot(data = tibble(x = X), aes(x = x)) +
geom_histogram(fill = "Firebrick", col = "Black")
#Basic EM
source("~/Desktop/Skole/Compstat/Assignment3/rScript/assignment3/EM_1.R")
source("~/Desktop/Skole/Compstat/Assignment3/compStat3/rScript/EM_1.R")
source("~/Desktop/Skole/Compstat/Assignment3/compStat3/rScript/gradient_descent.R")
library(tidyverse)
theme_set(theme_bw())
library(CSwR)
library(microbenchmark)
library(Rcpp)
library(profvis)
library(numDeriv)
#---------------------------------Simulation-----------------------------------#
#Set parameters
mu <- 2
sigma_sq <- 4
nu <- 5
initpar <- c(1, 5)
#Simulate using hint
N <- 10000 #number of simulations
W <- rchisq(N, df = nu)
X <- rnorm(N, mean = mu, sd = sqrt(nu*sigma_sq/W))
ggplot2::ggplot(data = tibble(x = X), aes(x = x)) +
geom_histogram(fill = "Firebrick", col = "Black")
#Basic EM
source("~/Desktop/Skole/Compstat/Assignment3/compStat3/rScript/EM_1.R")
#Alternative implementation
source("~/Desktop/Skole/Compstat/Assignment3/compStat3/rScript/gradient_descent.R")
#Rcpp implementation
Rcpp::sourceCpp("EM_CPP.cpp")
est_cpp <- EM_CPP(X,initpar, nu, 1e-5, maxiter = 50)
#profiling
profvis::profvis(source("~/Desktop/Skole/Compstat/Assignment3/rScript/assignment3/EM_1.R"))
#profiling
profvis::profvis(source("~/Desktop/Skole/Compstat/Assignment3/compStat3/rScript/EM_1.R"))
#Benchmarking
a <-microbenchmark::microbenchmark(EM_1(data = X, par = initpar, nu = nu),
EM_CPP(X,initpar, nu, 1e-5, maxiter = 50), times = 100)
ggplot2::autoplot(a)
est
library(tidyverse)
theme_set(theme_bw())
library(CSwR)
library(microbenchmark)
library(Rcpp)
library(profvis)
library(numDeriv)
#---------------------------------Simulation-----------------------------------#
#Set parameters
mu <- 2
sigma_sq <- 4
nu <- 5
initpar <- c(1, 5)
#Simulate using hint
N <- 10000 #number of simulations
W <- rchisq(N, df = nu)
X <- rnorm(N, mean = mu, sd = sqrt(nu*sigma_sq/W))
ggplot2::ggplot(data = tibble(x = X), aes(x = x)) +
geom_histogram(fill = "Firebrick", col = "Black")
#Basic EM
source("~/Desktop/Skole/Compstat/Assignment3/compStat3/rScript/EM_1.R")
#Alternative implementation
source("~/Desktop/Skole/Compstat/Assignment3/compStat3/rScript/gradient_descent.R")
#Rcpp implementation
Rcpp::sourceCpp("EM_CPP.cpp")
est_cpp <- EM_CPP(X,initpar, nu, 1e-5, maxiter = 50)
#profiling
profvis::profvis(source("~/Desktop/Skole/Compstat/Assignment3/compStat3/rScript/EM_1.R"))
#Benchmarking
a <-microbenchmark::microbenchmark(EM_1(data = X, par = initpar, nu = nu),
EM_CPP(X,initpar, nu, 1e-5, maxiter = 50), times = 100)
ggplot2::autoplot(a)
a
#Benchmarking
init_bench <-microbenchmark::microbenchmark(EM_1(data = X, par = initpar, nu = nu),
EM_CPP(X,initpar, nu, 1e-5, maxiter = 50), times = 100)
as_tibble8(init_bench)
as_tibble(init_bench)
as_tibble(init_bench) %>% mutate(ifelse(str_detect(expr, "EM_1"), "R", "Rcpp"))
as_tibble(init_bench) %>% mutate(Implementation = ifelse(str_detect(expr, "EM_1"), "R", "Rcpp"), time = time/100000)
as_tibble(init_bench) %>% mutate(Implementation = ifelse(str_detect(expr, "EM_1"), "R", "Rcpp"), time = time/1000000)
as_tibble(init_bench) %>% mutate(Implementation = ifelse(str_detect(expr, "EM_1"), "R", "Rcpp"), time = time/1000000) %>%
ggplot(aes(x = time, col = Implementation)) + geom_density()
as_tibble(init_bench) %>% mutate(Implementation = ifelse(str_detect(expr, "EM_1"), "R", "Rcpp"), time = time/1000000) %>%
filter(time< 4) %>% ggplot(aes(x = time, col = Implementation)) + geom_density()
as_tibble(init_bench) %>% mutate(Implementation = ifelse(str_detect(expr, "EM_1"), "R", "Rcpp"), time = time/1000000) %>%
filter(time< 4) %>% ggplot(aes(x = time, fill = Implementation)) + geom_density()
as_tibble(init_bench) %>% mutate(Implementation = ifelse(str_detect(expr, "EM_1"), "R", "Rcpp"), time = time/1000000) %>%
filter(time< 4) %>% ggplot(aes(x = time, fill = Implementation)) + geom_density(alpha = .3)
as_tibble(init_bench) %>% mutate(Implementation = ifelse(str_detect(expr, "EM_1"), "R", "Rcpp"), time = time/1000000) %>%
filter(time< 4) %>% ggplot(aes(x = time, fill = Implementation)) + geom_density(alpha = .78)
as_tibble(init_bench) %>% mutate(Implementation = ifelse(str_detect(expr, "EM_1"), "R", "Rcpp"), time = time/1000000) %>%
filter(time< 4) %>% ggplot(aes(x = time, fill = Implementation)) + geom_density(alpha = .7)
# Test of basic EM algorithm
EM_1(data = X, par = initpar, nu = nu)
# Test of basic EM algorithm
CSwR::tracer("par")
# Test of basic EM algorithm
EM_tracer <- CSwR::tracer("par")
EM_tracer
EM_1(data = X, par = initpar, nu = nu, trace = EM_tracer$tracer())
EM_1(data = X, par = initpar, nu = nu, trace = EM_tracer$tracer())
EM_tracer$tracer()
EM_tracer$tracer()
EM_tracer$tracer()
EM_tracer$tracer()
EM_tracer$tracer()
EM_tracer$tracer()
EM_tracer$tracer()
EM_tracer$tracer()
EM_tracer$tracer()
EM_tracer$tracer()
# Test of basic EM algorithm
EM_tracer <- CSwR::tracer("par")
EM_1(data = X, par = initpar, nu = nu, trace = EM_tracer$tracer())
EM_1 <- function(data,
par,
nu,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- Mstep0(data,
Estep0(
data,
par0[1],
par0[2],
nu)$Q1,
nu)
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
# Test of basic EM algorithm
EM_tracer <- CSwR::tracer("par")
EM_1(data = X, par = initpar, nu = nu, trace = EM_tracer$tracer())
EM_1 <- function(data,
par,
nu,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- Mstep0(data,
Estep0(
data,
par0[1],
par0[2],
nu)$Q1,
nu)
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
# Test of basic EM algorithm
EM_tracer <- CSwR::tracer("par")
EM_1(data = X, par = initpar, nu = nu, trace = EM_tracer$tracer)
EM_tracer
EM_tracer$tracer
EM_tracer$tracer()
# Test of basic EM algorithm
EM_tracer <- CSwR::tracer("par")
EM_1(data = X, par = initpar, nu = nu, trace = EM_tracer$tracer)
EM_tracer$get()
EM_tracer$.time
EM_tracer$get()
EM_tracer$get() %>% as_tibble()
EM_tracer %>% as_tibble()
EM_tracer
summary(EM_tracer)
summary(EM_tracer) %>% c(c(initpar, 0),.)
summary(EM_tracer) %>% rbind(c(initpar, 0),.)
# Test of basic EM algorithm
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar, nu = nu, trace = EM_tracer$tracer)
summary(EM_tracer)
summary(EM_tracer) %>% as_tibble()
summary(EM_tracer) %>% as_tibble() %>% mutate(par1 = abs(par.1-par0.1))
summary(EM_tracer) %>% as_tibble() %>% mutate(diffpar1 = abs(par.1-par0.1), diffpar2 = par.2- par0.2)
summary(EM_tracer) %>% as_tibble() %>% mutate(diffpar1 = abs(par.1-par0.1), diffpar2 = abs(par.2- par0.2))
summary(EM_tracer) %>% as_tibble() %>% mutate(diffpar1 = abs(par.1-par0.1), diffpar2 = abs(par.2- par0.2), time = .time)
summary(EM_tracer) %>% as_tibble() %>% mutate(diffpar1 = abs(par.1-par0.1), diffpar2 = abs(par.2- par0.2), time = .time) %>%
select(time, diffpar1, diffpar2)
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, diffpar1, diffpar2) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = stepsize, col = Parameter)) + geom_line(size = 1)
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = stepsize, col = Parameter)) + geom_line(size = 1)
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = stepsize, col = Parameter)) + geom_smooth(size = 1)
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = stepsize, col = Parameter)) + geom_smooth(size = 1, se = F)
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = stepsize, col = Parameter)) + geom_point(size = 1, se = F)
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = stepsize, col = Parameter)) + geom_point(size = 1)
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 1)
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_line(size = 1)
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_line(size = 1) + xlab("Time")
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_line(size = 1) + xlab("Time") +
theme(axis.title = element_text(face = "bold"))
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_line(size = 1) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14))
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_line(size = 1) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12))
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_line(size = 1) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16))
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_line(size = 1) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.key = element_text(face = "bold", size = 12))
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_line(size = 1) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 1) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 1.5) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 1.5) + xlab("Time") +
scale_fill_discrete(labels = c(expression("mu"),expression("sigma^2"))) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 1.5) + xlab("Time") +
scale_fill_discrete(labels = c("mu", sig)) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 1.5) + xlab("Time") +
scale_fill_discrete(labels = c("mu", "sig")) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 1.5) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12)) +
scale_fill_discrete(labels = c("mu", "sig")) +
#Alternative implementation
source("~/Desktop/Skole/Compstat/Assignment3/compStat3/rScript/gradient_descent.R")
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 1.5) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12)) +
scale_fill_discrete(labels = c("mu", "sig")) +
#Alternative implementation
source("~/Desktop/Skole/Compstat/Assignment3/compStat3/rScript/gradient_descent.R")
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 1.5) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 1.5) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12)) + scale_fill_discrete(labels = c("mu", "sig"))
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 1.5) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 2) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
EM_1(data = X, par = initpar, nu = nu, trace = EM_tracer$tracer)
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 2) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
# Test of basic EM algorithm
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar, nu = nu, trace = EM_tracer$tracer)
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 2) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
initpar2 <- c(-10, 10)
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar, nu = nu, trace = EM_tracer$tracer)
initpar2 <- c(-10, 10)
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar2, nu = nu, trace = EM_tracer$tracer)
initpar2 <- c(-100, 10)
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar2, nu = nu, trace = EM_tracer$tracer)
initpar2 <- c(-100, 20)
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar2, nu = nu, trace = EM_tracer$tracer)
initpar2 <- c(-100, 200)
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar2, nu = nu, trace = EM_tracer$tracer)
initpar2 <- c(-1000, 200)
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar2, nu = nu, trace = EM_tracer$tracer)
initpar2 <- c(-100, 200)
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar2, nu = nu, trace = EM_tracer$tracer)
initpar2 <- c(-10000, 200)
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar2, nu = nu, trace = EM_tracer$tracer)
initpar2 <- c(-10000, 200)
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar2, nu = nu, trace = EM_tracer$tracer)
initpar2 <- c(-1000, 200)
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar2, nu = nu, trace = EM_tracer$tracer)
initpar2 <- c(-1000, 400)
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar2, nu = nu, trace = EM_tracer$tracer)
as_tibble(init_bench) %>% mutate(Implementation = ifelse(str_detect(expr, "EM_1"), "R", "Rcpp"), time = time/1000000) %>%
filter(time< 4) %>% ggplot(aes(x = time, fill = Implementation)) + geom_density(alpha = .7)
initpar2 <- c(-1000, 400)
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar2, nu = nu, trace = EM_tracer$tracer)
initpar2 <- c(-1000, 400)
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar2, nu = nu, trace = EM_tracer$tracer)
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 2) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
initpar2 <- c(-10000, 400)
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar2, nu = nu, trace = EM_tracer$tracer)
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 2) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
initpar2 <- c(-100000, 400)
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar2, nu = nu, trace = EM_tracer$tracer)
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 2) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
summary(EM_tracer)
summary(EM_tracer) %>% xtable::xtable()
initpar2 <- c(-1000, 400)
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar2, nu = nu, trace = EM_tracer$tracer)
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 2) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = stepsize, col = Parameter)) + geom_point(size = 2) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 2) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
initpar2 <- c(1000, 400)
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar2, nu = nu, trace = EM_tracer$tracer)
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 2) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
initpar2 <- c(-10000, 400)
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar2, nu = nu, trace = EM_tracer$tracer)
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 2) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
initpar2 <- c(-100000, 400)
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar2, nu = nu, trace = EM_tracer$tracer)
summary(EM_tracer) %>% as_tibble() %>% mutate(mu = abs(par.1-par0.1), sigma_sq = abs(par.2- par0.2), time = .time) %>%
select(time, mu, sigma_sq) %>% pivot_longer(-time, names_to = "Parameter", values_to = "stepsize") %>%
ggplot(aes(x = time, y = log(stepsize), col = Parameter)) + geom_point(size = 2) + xlab("Time") +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12))
summary(EM_tracer)
summary(EM_tracer) %>% xtable()
summary(EM_tracer) %>% xtable::xtable()
EM_1(data = X, par = initpar2, nu = nu, trace = EM_tracer$tracer)
initpar2 <- c(-100000, 400)
EM_tracer <- CSwR::tracer(c("par", "par0"))
EM_1(data = X, par = initpar2, nu = nu, trace = EM_tracer$tracer)
