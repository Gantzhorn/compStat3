W <- rchisq(N, df = nu)
X <- rnorm(N, mean = mu, sd = sqrt(nu*sigma_sq/W))
loss(parinit3, X)
nleqslv(parinit3, loss, data = X)
parinit3 <- c(3,4,2)
nleqslv(parinit3, loss, data = X)
loss <- function(theta, data){sum(
c(sum(data*Estep0(data, theta[1], theta[2], theta[3])$Q1)/sum(Estep0(data, theta[1], theta[2], theta[3])$Q1) - theta[1],
1/theta[3]*mean(Estep0(data, theta[1], theta[2], theta[3])$Q1*(data-theta[1])^2) - theta[2],
1/(2*theta[3]) + 1/2*log(2) + digamma(theta[3]/2) -
1/2*mean(Estep0(data, theta[1], theta[2], theta[3])$Q2) -
1/2*mean(Estep0(data, theta[1], theta[2], theta[3])$Q1*((data-theta[1])^2)/(theta[3]^2*theta[2]))
)^2)
}
loss(parinit3, X)
?nlm
nlm(loss, parinit3, data = X)
EM_mu <- function(data,
par,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- nlm(loss, par, data = X)$estimate
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
loss <- function(theta, data){sum(
c(sum(data*Estep0(data, theta[1], theta[2], theta[3])$Q1)/sum(Estep0(data, theta[1], theta[2], theta[3])$Q1) - theta[1],
1/theta[3]*mean(Estep0(data, theta[1], theta[2], theta[3])$Q1*(data-theta[1])^2) - theta[2],
1/(2*theta[3]) + 1/2*log(2) + digamma(theta[3]/2) -
1/2*mean(Estep0(data, theta[1], theta[2], theta[3])$Q2) -
1/2*mean(Estep0(data, theta[1], theta[2], theta[3])$Q1*((data-theta[1])^2)/(theta[3]^2*theta[2]))
)^2)
}
nlm(loss, parinit3, data = X)$estimate
parinit3 <- c(3,4,2)
EM_mu <- function(data,
par,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- nlm(loss, par, data = X)$estimate
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
EM_mu(X, parinit3)
EM_mu <- function(data,
par,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- nlm(loss, par, data = X)$estimate
print(par)
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
EM_mu(X, parinit3)
loss <- function(theta, data){sum(
c(sum(data*Estep0(data, theta[1], theta[2], theta[3])$Q1)/sum(Estep0(data, theta[1], theta[2], theta[3])$Q1) - theta[1],
1/theta[3]*mean(Estep0(data, theta[1], theta[2], theta[3])$Q1*(data-theta[1])^2) - theta[2],
1/(2*theta[3]) + 1/2*log(2) + digamma(theta[3]/2) -
1/2*mean(Estep0(data, theta[1], theta[2], theta[3])$Q2) -
1/2*mean(Estep0(data, theta[1], theta[2], theta[3])$Q1*((data-theta[1])^2)/(theta[3]^2*theta[2]))
)^2)
}
parinit3 <- c(3,4,2)
EM_mu <- function(data,
par,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- nlm(loss, par, data = X)$estimate
print(par)
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
EM_mu <- function(data,
par,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- nlm(loss, par, data = data)$estimate
print(par)
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
EM_mu(X, parinit3)
EM_mu <- function(data,
par,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- nlm(loss, par, data = data)$estimate
print(sum((par-par0)^2))
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
EM_mu(X, parinit3)
EM_mu <- function(data,
par,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- nlm(loss, par, data = data)$estimate
print(sum((par-par0)^2))
print(par)
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
EM_mu(X, parinit3)
EM_mu <- function(data,
par,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- nlm(loss, par, data = data)$estimate
print(sum((par-par0)^2))
print(i)
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
EM_mu(X, parinit3)
parinit3 <- c(1,4,2)
EM_mu <- function(data,
par,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- nlm(loss, par, data = data)$estimate
print(sum((par-par0)^2))
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
EM_mu(X, parinit3)
EM_mu <- function(data,
par,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- nlm(loss, par, data = data)$estimate
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
EM_mu(X, parinit3)
parinit3 <- c(1,4,5)
EM_mu <- function(data,
par,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- nlm(loss, par, data = data)$estimate
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
EM_mu(X, parinit3)
#Simulate using hint
N <- 100000 #number of simulations
W <- rchisq(N, df = nu)
X <- rnorm(N, mean = mu, sd = sqrt(nu*sigma_sq/W))
loss <- function(theta, data){sum(
c(sum(data*Estep0(data, theta[1], theta[2], theta[3])$Q1)/sum(Estep0(data, theta[1], theta[2], theta[3])$Q1) - theta[1],
1/theta[3]*mean(Estep0(data, theta[1], theta[2], theta[3])$Q1*(data-theta[1])^2) - theta[2],
1/(2*theta[3]) + 1/2*log(2) + digamma(theta[3]/2) -
1/2*mean(Estep0(data, theta[1], theta[2], theta[3])$Q2) -
1/2*mean(Estep0(data, theta[1], theta[2], theta[3])$Q1*((data-theta[1])^2)/(theta[3]^2*theta[2]))
)^2)
}
EM_mu <- function(data,
par,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- nlm(loss, par, data = data)$estimate
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
EM_mu(X, parinit3)
nu <- 5
initpar <- c(2, 4)
#Simulate using hint
N <- 100000 #number of simulations
W <- rchisq(N, df = nu)
X <- rnorm(N, mean = mu, sd = sqrt(nu*sigma_sq/W))
EM_mu <- function(data,
par,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- nlm(loss, par, data = data)$estimate
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
EM_mu(X, parinit3)
#---------------------------------Simulation-----------------------------------#
#Set parameters
mu <- 0
sigma_sq <- 2
nu <- 5
initpar <- c(2, 4)
#Simulate using hint
N <- 100000 #number of simulations
W <- rchisq(N, df = nu)
X <- rnorm(N, mean = mu, sd = sqrt(nu*sigma_sq/W))
parinit3 <- c(1,4,5)
EM_mu <- function(data,
par,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- nlm(loss, par, data = data)$estimate
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
EM_mu(X, parinit3)
#---------------------------------Simulation-----------------------------------#
#Set parameters
mu <- 5
sigma_sq <- 5
nu <- 5
initpar <- c(2, 4)
#Simulate using hint
N <- 100000 #number of simulations
W <- rchisq(N, df = nu)
X <- rnorm(N, mean = mu, sd = sqrt(nu*sigma_sq/W))
parinit3 <- c(1,4,5)
EM_mu <- function(data,
par,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- nlm(loss, par, data = data)$estimate
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
EM_mu(X, parinit3)
parinit3 <- c(6,3,5)
EM_mu <- function(data,
par,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- nlm(loss, par, data = data)$estimate
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
EM_mu(X, parinit3)
EM_mu <- function(data,
par,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- nlm(loss, par, data = data)$estimate
print(i)
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
EM_mu(X, parinit3)
EM_mu <- function(data,
par,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- nlm(loss, par0, data = data)$estimate
print(i)
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
EM_mu(X, parinit3)
nlm(loss, parinit3, data = X)$estimate
nlm(loss, c(5.020901, 4.064585, 2.968535), data = X)
loss <- function(theta, data){sum(
c(sum(data*Estep0(data, theta[1], theta[2], theta[3])$Q1)/sum(Estep0(data, theta[1], theta[2], theta[3])$Q1) - theta[1],
1/theta[3]*mean(Estep0(data, theta[1], theta[2], theta[3])$Q1*(data-theta[1])^2) - theta[2],
1/(2*theta[3]) + 1/2*log(2) + digamma(theta[3]/2) -
1/2*mean(Estep0(data, theta[1], theta[2], theta[3])$Q2) -
1/2*mean(Estep0(data, theta[1], theta[2], theta[3])$Q1*((data-theta[1])^2)/(theta[3]^2*theta[2]))
)^2)
}
loss
loss(parinit3, X)
-
)
loss <- function(theta, data){sum(
-c(sum(data*Estep0(data, theta[1], theta[2], theta[3])$Q1)/sum(Estep0(data, theta[1], theta[2], theta[3])$Q1) - theta[1],
1/theta[3]*mean(Estep0(data, theta[1], theta[2], theta[3])$Q1*(data-theta[1])^2) - theta[2],
1/(2*theta[3]) + 1/2*log(2) + digamma(theta[3]/2) -
1/2*mean(Estep0(data, theta[1], theta[2], theta[3])$Q2) -
1/2*mean(Estep0(data, theta[1], theta[2], theta[3])$Q1*((data-theta[1])^2)/(theta[3]^2*theta[2]))
)^2)
}
loss(parinit3, X)
nlm(loss, c(5.020901, 4.064585, 2.968535), data = X)
EM_mu <- function(data,
par,
epsilon = 1e-6,
maxiter = 50,
trace = NULL,
prints = FALSE){
for(i in 1:maxiter){
par0 <- par
par <- nlm(loss, par0, data = data)$estimate
print(i)
if(!is.null(trace)) trace()
if(sum((par-par0)^2) <= epsilon * (sum(par^2)+epsilon)) break
}
if(i == maxiter) {base::warning("Maximum number of iterations reached")}
if(prints == TRUE && i < maxiter){
print(glue::glue("Convergence reached after ", i, " steps."))
}
par
}
EM_mu(X, parinit3)
loss <- function(theta, data){sum(
c(sum(data*Estep0(data, theta[1], theta[2], theta[3])$Q1)/sum(Estep0(data, theta[1], theta[2], theta[3])$Q1) - theta[1],
1/theta[3]*mean(Estep0(data, theta[1], theta[2], theta[3])$Q1*(data-theta[1])^2) - theta[2],
1/(2*theta[3]) + 1/2*log(2) + digamma(theta[3]/2) -
1/2*mean(Estep0(data, theta[1], theta[2], theta[3])$Q2) -
1/2*mean(Estep0(data, theta[1], theta[2], theta[3])$Q1*((data-theta[1])^2)/(theta[3]^2*theta[2]))
)^2)
}
loss(parinit3, X)
nlm(loss, c(5.020901, 4.064585, 2.968535), data = X)
numDeriv::grad(loss)
numDeriv::grad(loss,, data =X)
numDeriv::grad(loss, data =X)
numDeriv::grad
numDeriv::grad(loss, x = parinit, data =X)
numDeriv::grad(loss, x = parinit3, data =X)
#---------------------------------Simulation-----------------------------------#
#Set parameters
mu <- 2
sigma_sq <- 3
nu <- 1
initpar <- c(2, 4)
#Simulate using hint
N <- 100000 #number of simulations
W <- rchisq(N, df = nu)
X <- rnorm(N, mean = mu, sd = sqrt(nu*sigma_sq/W))
loss <- function(theta, data){sum(
c(sum(data*Estep0(data, theta[1], theta[2], theta[3])$Q1)/sum(Estep0(data, theta[1], theta[2], theta[3])$Q1) - theta[1],
1/theta[3]*mean(Estep0(data, theta[1], theta[2], theta[3])$Q1*(data-theta[1])^2) - theta[2],
1/(2*theta[3]) + 1/2*log(2) + digamma(theta[3]/2) -
1/2*mean(Estep0(data, theta[1], theta[2], theta[3])$Q2) -
1/2*mean(Estep0(data, theta[1], theta[2], theta[3])$Q1*((data-theta[1])^2)/(theta[3]^2*theta[2]))
)^2)
}
numDeriv::grad(loss, x = parinit3, data =X)
parinit3 <- c(2,3,1)
numDeriv::grad(loss, x = parinit3, data =X)
nlm(loss, c(5.020901, 4.064585, 2.968535), data = X)
